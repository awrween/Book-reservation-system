name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.stats()'" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    env:
      MONGO_URI: mongodb://localhost:27017/book-reservation
      JWT_SECRET: dummy_jwt_secret
      PORT: 5000
      CI: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: Run backend tests
        working-directory: ./backend
        run: npm test

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

  deploy-to-ec2:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            echo "📦 Switching to project folder..."
            cd /home/ubuntu/Book-reservation-system

            echo "🔄 Pulling latest changes..."
            git reset --hard
            git pull origin main

            echo "🚮 Cleaning backend..."
            cd backend
            rm -rf node_modules package-lock.json

            echo "🚀 Installing backend..."
            npm install

            echo "🛑 Stopping old backend..."
            pkill -f "node server.js" || true

            echo "🎯 Starting backend..."
            nohup npm start > server.log 2>&1 &

            echo "🚮 Cleaning frontend..."
            cd ../frontend
            rm -rf node_modules package-lock.json

            echo "💡 Installing frontend..."
            npm install

            echo "⚒️  Building frontend..."
            npm run build

            echo "✅ Deployment complete!"

            

