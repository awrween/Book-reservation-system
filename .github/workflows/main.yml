name: CI Pipeline  

on:  
  push:  
    branches: [ main ]  
  pull_request:  
    branches: [ main ]  

jobs:  
  test-and-build:  
    runs-on: ubuntu-latest  

    services:  
      mongo:  
        image: mongo:5.0  
        ports:  
          - 27017:27017  
        options: >-  
          --health-cmd "mongosh --quiet --eval 'db.stats()'"  
          --health-interval 10s  
          --health-timeout 5s  
          --health-retries 5  

    env:  
      MONGO_URI: mongodb://localhost:27017/book-reservation  
      JWT_SECRET: dummy_jwt_secret  
      PORT: 5000  

    steps:  
      - name: Checkout code  
        uses: actions/checkout@v3  

      - name: Cache node modules  
        uses: actions/cache@v3  
        id: cache  
        with:  
          path: |  
            ~/.npm  
            **/node_modules  
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}  
          restore-keys: |  
            ${{ runner.os }}-node-  

      - name: Set up Node.js  
        uses: actions/setup-node@v3  
        with:  
          node-version: '18'  
          cache: 'npm'  

      # Backend steps  
      - name: Install backend dependencies  
        working-directory: ./backend  
        run: npm ci  
        env:  
          CI: true  

      - name: Run backend tests  
        working-directory: ./backend  
        run: npm test  
        env:  
          CI: true  

      # Frontend steps  
      - name: Install frontend dependencies  
        working-directory: ./frontend  
        run: npm ci  
        env:  
          CI: true  

      - name: Run frontend tests  
        working-directory: ./frontend  
        run: npm test  
        env:  
          CI: true  

      - name: Build frontend  
        working-directory: ./frontend  
        run: npm run build  
        env:  
          CI: false  # Disable CI mode to prevent treating warnings as errors  
